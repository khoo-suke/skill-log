// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Contact {
  id  Int @id              @default(autoincrement())
  name String
  email String
  content String
  createdAt     DateTime   @default(now())
}

model Profile {
  id    Int @id @default(autoincrement())
  supabaseUserId String  @unique
  name  String?
  email String  @unique
  goal  String?
  profileImageKey String?
  post  Post[]
  studyTime StudyTime[]
  category  Category[]
  tag Tag[]
}

model StudyTime {
  id        Int           @id @default(autoincrement())
  date      DateTime      @default(now())
  studyTime Int
  profileId     Int
  profile       Profile       @relation(fields: [profileId], references: [id])
}

model Post {
  id            Int           @id @default(autoincrement())
  profileId     Int
  profile       Profile       @relation(fields: [profileId], references: [id])
  title         String
  content       String
  imageUrl      String?
  createdAt     DateTime       @default(now())
  postCategories PostCategory[]
  postTags      PostTag[]
}

model PostCategory {
  id             Int      @id @default(autoincrement())
  postId         Int
  post           Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  categoryId     Int
  category       Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([postId, categoryId])
}

model Category {
  id            Int          @id @default(autoincrement())
  name          String       @unique
  createdAt     DateTime     @default(now())
  postCategories PostCategory[]
  profileId     Int
  profile       Profile       @relation(fields: [profileId], references: [id])
}

model PostTag {
  id       Int      @id @default(autoincrement())
  postId   Int
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  tagId    Int
  tag      Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([postId, tagId])
}

model Tag {
  id            Int        @id @default(autoincrement())
  name          String     @unique
  createdAt     DateTime   @default(now())
  postTags      PostTag[]
  profileId     Int
  profile       Profile    @relation(fields: [profileId], references: [id])
}