// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model Contact {
  id  Int @id @default(autoincrement())
  name string
  email string
  content string
}

model Profile {
  id  Int @id @default(autoincrement())
  id  prismaId
  goal  string
  profileImageUrl string
}

model StudyTime {
  id        Int      @id @default(autoincrement())
  profileId Int
  date      DateTime @default(now())
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
}


model Post {
  id            Int          @id @default(autoincrement())
  studyTimeId   Int
  profileId     Int
  title         String
  content       String
  imageUrl      String
  createdAt     DateTime     @default(now())
  postCategories PostCategory[]
  postTags      PostTag[]
  studyTime     StudyTime    @relation(fields: [studyTimeId], references: [id], onDelete: Cascade)
  profile       Profile      @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model PostCategory {
  id             Int    @id @default(autoincrement())
  postId         Int
  categoryId     Int
  post           Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  category       Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Category {
  id            Int          @id @default(autoincrement())
  profileId     Int
  name          String
  createdAt     DateTime     @default(now())
  postCategories PostCategory[]
  profile       Profile      @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model PostTag {
  id       Int    @id @default(autoincrement())
  postId   Int
  tagId    Int
  post     Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  tag      Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model Tag {
  id       Int    @id @default(autoincrement())
  profileId Int
  name     String
  createdAt DateTime @default(now())
  postTags PostTag[]
  profile  Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)
}